module hangman_display (
    input clk,  // clock
    input rst,  // reset
    input wrong[3],
    output matrixsel[16],
    output matrixrow[8]
  ) {
  
  .clk(clk), .rst(rst) {
    counter ctr (#DIV(16), #SIZE(3), #TOP(15));
  }
  
  hangdecoder decode;
    
  var temp[16][8];
  
  always {
      case(wrong){    
      1:temp={8b00000000,
              8b11111111,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b00000000};
      2:temp={8b00000000,
              8b11111111,
              8b10001000,
              8b10001000,
              8b10011100,
              8b10100010,
              8b10100010,
              8b10011100,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b10000000,
              8b00000000};
      3:temp={8b00000000,
              8b11111111,
              8b10001000,
              8b10001000,
              8b10011100,
              8b10100010,
              8b10100010,
              8b10011100,
              8b10001000,
              8b10001000,
              8b10001000,
              8b10001000,
              8b10001000,
              8b10000000,
              8b10000000,
              8b00000000};
      4:temp={8b00000000,
              8b11111111,
              8b10001000,
              8b10001000,
              8b10011100,
              8b10100010,
              8b10100010,
              8b10011100,
              8b10001000,
              8b10001000,
              8b10011100,
              8b10101010,
              8b10001000,
              8b10000000,
              8b10000000,
              8b00000000};
      5:temp={8b00000000,
              8b11111111,
              8b10001000,
              8b10001000,
              8b10011100,
              8b10100010,
              8b10100010,
              8b10011100,
              8b10001000,
              8b10001000,
              8b10011100,
              8b10101010,
              8b10001000,
              8b10010100,
              8b10100010,
              8b00000000};
      default:temp={8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,    
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000,
                    8b0000000};   
    }
    
    decode.in = ctr.value;
    matrixsel = decode.out;
    matrixrow = temp[ctr.value];
  }
}

